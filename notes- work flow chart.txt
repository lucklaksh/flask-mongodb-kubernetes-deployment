set up "python-flask"  server in asia-south-mumbai- t2.micro
Its Ubuntu 24.04

sudo apt install docker.io	=v24.0
sudo usermod -aG docker ubuntu
sudo apt install python3	=v3.12
sudo apt install python3-pip    =v24.0


 mkdir flask-mongodb-app
 cd flask-mongodb-app

===============virtual setup===============
sudo apt install python3.12-venv
python3 -m venv venv
source venv/bin/activate 

deactivate

==========================================
app.py
------

from flask import Flask, request, jsonify 
from pymongo import MongoClient 
from datetime import datetime 
import os 

app = Flask(__name__)

client = MongoClient(os.environ.get("MONGODB_URI", "mongodb://localhost:27017/"))
 
db = client.flask_db
 
collection = db.data

@app.route('/')
def index():
    return f"Welcome to the Flask app! The current time is: {datetime.now()}"
 
@app.route('/data', methods=['GET', 'POST'])
def data():
    if request.method == 'POST':
        data = request.get_json()
        collection.insert_one(data)
        return jsonify({"status": "Data inserted"}), 201
    elif request.method == 'GET':
        data = list(collection.find({}, {"_id": 0}))
        return jsonify(data), 200
 
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

=================================================
 requirements.txt
 ----------------

Flask==2.0.2
 Werkzeug==2.0.3
 pymongo==3.12.0

====================================================

pip install -r requirements.txt

====================================================
Set Up MongoDB Using Docker
 Pull and run the MongoDB Docker image:

 docker pull mongo:latest
 docker run -d -p 27017:27017 --name mongodb mongo:latest

=======================================================
.env file
----------

MONGODB_URI=mongodb://localhost:27017/
FLASK_APP=app.py
FLASK_ENV=development
 
export $(cat .env | xargs)
flask run   				====> local browsing
nohup flask run --host=0.0.0.0 &  	====> browse from any ip on default port 5000 


===========================================================
dockerfile
----------
FROM python:3.12
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
ENV FLASK_APP=app.py
ENV FLASK_ENV=development
EXPOSE 5000
CMD ["flask", "run", "--host=0.0.0.0"]


docker build -t lakshmanlucky821/flask-mongodb-app .
docker run -d -p 5000:5000 --name flask-mongodb-app -e MONGODB_URI=mongodb://localhost:27017/ lakshmanlucky821/flask-mongodb-app
docker push lakshmanlucky821/flask-mongodb-app:latest

===============================================================
***************************************************************
===============================================================

Login to the kubernetes cluster
self managed kubecluster setup via kubeadm
1 Master 2 workernodes

=================================================================
Assessment- deploy python webapp and mongodb server and connect them via services

flask-mongodb-app => webapp
--------------------------
1. create deplyment.yml with lakshmanlucky821/flask-mongodb-app custom image
2. svc cluster ip selector match labels to webapp pods

mongodb => database 
-------------------
3. create statefulset.yml with mongodb:latest image
4. svc should be headless services 


Ingress
-------
I have already installed custom nginx-ingress-controller on my kuberneses cluster

5. create ingress resource to point the external traffic to the webapp route traffic to this webapp service

